# Generated by Django 3.0.5 on 2020-07-26 05:21

import accounts.validators
import applicants.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('batches', '0001_initial'),
        ('courses', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Applicant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sub_date', models.DateTimeField(auto_now_add=True, verbose_name='Submission Date')),
                ('verified', models.BooleanField(default=False)),
                ('admitted', models.BooleanField(default=False)),
                ('semester_apply', models.CharField(choices=[('1st', '1st'), ('3rd', '3rd'), ('4th', '4th')], default='1st', max_length=3, verbose_name='Semester to apply')),
                ('phone', models.CharField(max_length=11, validators=[django.core.validators.RegexValidator('^[+0-9]{6,11}$', 'Enter a valid phone number')])),
                ('ssc_year', models.IntegerField(choices=[(2000, 2000), (2001, 2001), (2002, 2002), (2003, 2003), (2004, 2004), (2005, 2005), (2006, 2006), (2007, 2007), (2008, 2008), (2009, 2009), (2010, 2010), (2011, 2011), (2012, 2012), (2013, 2013), (2014, 2014), (2015, 2015), (2016, 2016), (2017, 2017), (2018, 2018), (2019, 2019), (2020, 2020)], default=2020, verbose_name='SSC Passing Year')),
                ('ssc_board', models.CharField(choices=[('barisal', 'Barisal'), ('chittagong', 'Chittagong'), ('comilla', 'Comilla'), ('dhaka', 'Dhaka'), ('dinajpur', 'Dinajpur'), ('jessore', 'Jessore'), ('mymensingh', 'Mymensingh'), ('rajshahi', 'Rajshahi'), ('sylhet', 'Sylhet'), ('madrasah', 'Madrasah'), ('tec', 'Technical'), ('dibs', 'DIBS(Dhaka)')], max_length=20, verbose_name='Board')),
                ('ssc_roll', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^[0-9]{6,10}$', 'Only numbers are allowed')], verbose_name='SSC Roll')),
                ('ssc_reg', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^[0-9]{6,10}$', 'Only numbers are allowed')], verbose_name='SSC Registration')),
                ('ssc_group', models.CharField(max_length=20, verbose_name='Group')),
                ('ssc_gpa', models.DecimalField(decimal_places=2, max_digits=3, validators=[applicants.validators.valid_result], verbose_name='SSC GPA')),
                ('name', models.CharField(max_length=255, validators=[django.core.validators.RegexValidator('^[a-zA-Z\\s.\\-]*$', "Only characters are allowed. Don't use number")])),
                ('date_of_birth', models.DateField(verbose_name='Date of Birth')),
                ('father_name', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[a-zA-Z\\s.\\-]*$', "Only characters are allowed. Don't use number")], verbose_name="Father's Name")),
                ('mother_name', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[a-zA-Z\\s.\\-]*$', "Only characters are allowed. Don't use number")], verbose_name="Mother's Name")),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female'), ('Common', 'Common')], default='Male', max_length=10)),
                ('nationality', models.CharField(default='Bangladeshi', max_length=50, validators=[django.core.validators.RegexValidator('^[a-zA-Z\\s.\\-]*$', "Only characters are allowed. Don't use number")])),
                ('religion', models.CharField(choices=[('Islam', 'Islam'), ('Hinduism', 'Hinduism'), ('Christianity', 'Christianity'), ('Buddhism', 'Buddhism')], default='Islam', max_length=50)),
                ('blood_group', models.CharField(blank=True, choices=[('A+', 'A+'), ('A-', 'A-'), ('B+', 'B+'), ('B-', 'B-'), ('O+', 'O+'), ('O-', 'O-'), ('AB+', 'AB+'), ('AB-', 'AB-')], max_length=3, null=True)),
                ('gurdian_phone', models.CharField(blank=True, max_length=11, validators=[django.core.validators.RegexValidator('^[+0-9]{6,11}$', 'Enter a valid phone number')], verbose_name="Gurdian's Phone")),
                ('present_address', models.TextField(blank=True, default='', verbose_name='Present Address')),
                ('permanent_address', models.TextField(blank=True, default='', verbose_name='Permanent Address')),
                ('image', models.ImageField(default='default-user.jpg', help_text='Upload your recent photo. Image must be 200px or more both in height and width', max_length=120, upload_to='applicants/', validators=[accounts.validators.validate_image])),
                ('batch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='batches.Batch')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='courses.Course')),
            ],
            options={
                'ordering': ('id',),
            },
        ),
    ]
